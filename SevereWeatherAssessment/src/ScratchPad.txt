library(psych)
library(sm)
getwd()
impact <- read.table("stats1-datafiles-Stats1.13.Lab.02.txt", header = T)
impact <- read.table("Stats1.13.HW.02.txt", header = T)
dim(impact)
nrow(impact)
ncol(impact)
edit(impact)
mean(impact$SR)
describe(impact)
describe(impact)
variance(impact$SR)
var(impact$SR)
edit(impact)
pretest <-subset(impact, impact[,3]=="pre")
pretest
describe(pretest)
postest<-subset(impact, impact[,3]=="post")
describe(posttest)
describe(postest)
hist(postest[,2], xlab ="Condition")
hist(postest[,4], xlab ="Condition")
describeBy(impact, impact$condition)
describeBy(postest, postest$condition)
par(mfrow = c(1,3))
hist(pretest[,4], xlab = "Dunno", main = "")
hist(postest[,4], xlab = "Huh", main ="")
pretest
impact
preWM ,- subset(pretest, pretest[2]=="WM")
preWM <- subset(pretest, pretest[2]=="WM")
prePE <- subset(pretest, pretest[2]=="PE")
preDS <- subset(pretest, pretest[2]=="DS")
postWM <- subset(postest, postest[,2]=="WM")
postPE  <- subset(postest, postest[,2]=="PE")
postDS <- subset(postest, postest[,2]=="DS")
par(mfrow = c(2,3))
hist(preWM[,4], xlab ="Pre WM", main ="")
hist(prePE[,4], xlab = "Pre PE", main="")
hist(preDS[,4], xlab = "Pre DS", main="")
hist(postWM[,4], xlab="Post WM", main="")
hist(postPE[,4], xlab="Post PE", main="")
hist(postDS[,4], xlab="Post DS", main="")
pre.wm = subset(pre, pre$condition=="WM") AND post.wm = subset(post, post$condition=="WM") AND pre.pe = subset(pre, pre$condition=="PE") AND post.pe = subset(post, post$condition=="PE") AND pre.ds = subset(pre, pre$condition=="DS") AND post.ds = subset(post, post$condition=="DS") AND mean(post.wm$SR)-mean(pre.wm$SR) AND mean(post.pe$SR)-mean(pre.pe$SR) AND mean(post.ds$SR)-mean(pre.ds$SR)
names(impact)
pre.wm = subset(pretest, pretest$condition=="WM") AND post.wm = subset(postest, postest$condition=="WM") AND pre.pe = subset(pretest, pretest$condition=="PE") AND post.pe = subset(postest, postest$condition=="PE") AND pre.ds = subset(pretest, pretest$condition=="DS") AND post.ds = subset(postest, postest$condition=="DS") AND mean(post.wm$SR)-mean(pre.wm$SR) AND mean(post.pe$SR)-mean(pre.pe$SR) AND mean(post.ds$SR)-mean(pre.ds$SR)
pre.wm = subset(pretest, pretest$condition=="WM")
post.wm = subset(postest, postest$condition=="WM")
pre.pe = subset(pretest, pretest$condition=="PE")
post.pe = subset(postest, postest$condition=="PE")
pre.ds = subset(pretest, pretest$condition=="DS")
post.ds = subset(postest, postest$condition=="DS")
mean(post.wm$SR)-mean(pre.wm$SR)
mean(post.pe$SR)-mean(pre.pe$SR)
mean(post.ds$SR)-mean(pre.ds$SR)
install.packages("gclus")
install.packages("rgl")
packageVersion("swirl")
library(swirl)
rm(list=ls())
install_from_swirl("Exploratory Data Analysis")
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch="8", main="Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col="red", pch="8", main="Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5.1))
info()
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathrofile("plot1.R"), local="TRUE")
source(pathrofile("plot1.R"), local=TRUE)
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds,strip = FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette("red" | "yellow")
info()
p2 <- colorRampPalette("red")
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue","green"), alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols brewer.pal(3, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
install.packages('ProjectTemplate')
library('ProjectTemplate')
setwd("~/Coursera/ReproducibleResearch/RepData_PeerAssessment2")
create.project('SevereWeatherAssessment')
getwd()
setwd('SevereWeatherAssessment')
library('ProjectTemplate')
load.project()
head('repdata.data.StormData')
str('repdata.data.StormData')
head('data')
str(repdata.data.StormData)
head(repdata.data.StormData)
StormData$Date2 <- as.Date( as.character(repdata.data.StormData$Date), "%m/%d/%y")
repdata.data.StormData$Date2 <- as.Date( as.character(repdata.data.StormData$Date), "%m/%d/%y")
repdata.data.StormData$Date2 <- as.Date(repdata.data.StormData$Date, "%m/%d/%y")
myBirthdayStorms <- subset(repdata.data.StormData, BGN_Date > as.Date("1956-07-14") ))
myBirthdayStorms <- subset(repdata.data.StormData, BGN_Date > as.Date("1956-07-14") )
class(repdata.data.StormData$BGN_DATE)
repdata.data.StormData$BGN_DATE <- as.Date(repdata.data.StormData$BGN_DATE, "%m/%d/%y")
class(repdata.data.StormData$BGN_DATE)
repdata.data.StormData$BGN_DATE <- as.Date(repdata.data.StormData$BGN_DATE, "%m/%d/%y", origin = "1950-01-01")
class(repdata.data.StormData$BGN_DATE)
head(repdata.data.StormData)
repdata.data.StormData$BGN_DATE <- as.Date(repdata.data.StormData$BGN_DATE, "%m/%d/%y", origin = "1970-01-01")
download.file("https://d396qusza40orc.cloudfront.net/repdata-data-StormData.csv.bz2", "data/repdata-data-StormData.csv.bz2")
download.file("https://d396qusza40orc.cloudfront.net/repdata-data-StormData.csv.bz2", "data/repdata-data-StormData2.csv.bz2")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "data/repdata-data-StormData2.csv.bz2")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "data/repdata-data-StormData.csv.bz2")
session.info()
sessionInfo()
load.project()
class(repdata.data.StormData$BGN_DATE)
load.project()
library('ProjectTemplate')
load.project()
summary(repdata.data.StormData)
pwd()
getwd()
tables()
install.packages("reshape")
install.packages("lubridate")
install.packages("data.table")
tables()
install.packages("log4r")
?data.table
??data.table
stormy <- data.table(repdata.data.StormData)
load(data.table)
library(data.table)
stormy <- data.table(repdata.data.StormData)
library("dplyr")
nrow(stormy)
head(stormy)
tail(stormy)
stormy.f <- filter(stormy, FATALITIES > 0)
stormy.f <- filter(stormy, INJURIES > 0)
stormy.f <- filter(stormy, FATALITIES > 0)
stormy.i <- filter(stormy, FATALITIES > 0)
library(ggplot2)
qplot(EVTYPE, FATALITIES, data=stormy.f)
qplot(EVTYPE, INJURIES, data=stormy.i)
qplot(EVTYPE, FATALITIES, data=stormy.f)
stormy.i <- filter(stormy, FATALITIES > 50)
stormy.i <- filter(stormy, INJURIES > 50)
stormy.f <- filter(stormy, FATALITIES > 50)
qplot(EVTYPE, FATALITIES, data=stormy.f)
stormy.f <- filter(stormy, FATALITIES > 25)
stormy.i <- filter(stormy, INJURIES > 25)
qplot(EVTYPE, FATALITIES, data=stormy.f)
qplot(EVTYPE, INJURIES, data=stormy.i)
stormy.i <- filter(stormy, INJURIES > 50)
qplot(EVTYPE, INJURIES, data=stormy.i)
stormy.i <- filter(stormy, INJURIES > 100)
qplot(EVTYPE, INJURIES, data=stormy.i)
stormy.i <- filter(stormy, INJURIES > 200)
qplot(EVTYPE, INJURIES, data=stormy.i)
stormy.f
stormy.pd <- filter(stormy, PROPDMG > 200)
stormy.pd <- filter(stormy, PROPDMG > 1000)
stormy.pd <- filter(stormy, PROPDMG > 500)
stormy.pd <- filter(stormy, PROPDMG > 750)
qplot(EVTYPE, PROPDMG, data=stormy.pd)
stormy.pd <- filter(stormy, PROPDMG > 1000)
stormy.pd <- filter(stormy, PROPDMG > 900)
qplot(EVTYPE, PROPDMG, data=stormy.pd)
stormy.pd <- filter(stormy, PROPDMG > 1000)
qplot(EVTYPE, PROPDMG, data=stormy.pd)
stormy.pd5k <- filter(stormy, PROPDMG > 5000)
stormy.pd2k <- filter(stormy, PROPDMG > 2000)
qplot(EVTYPE, PROPDMG, data=stormy.pd2k)
with (stormy, {plot (EVTYPE, FATALITIES)})
with (stormy, {plot (EVTYPE, INJURIES)})
group_by(stormy,EVTYPE) %>% summarize(n = n())
numevents <- group_by(stormy,EVTYPE) %>% summarize(n = n())
stormy[,.(EVTYPE.f = sum(FATALITIES)), by= EVTYPE]
eventTypeF <- stormy[,.(EVTYPE.f = sum(FATALITIES)), by= EVTYPE]
eventTypeFN <- filter(eventTypeF, EVTYPE.f > 0)
eventTypeI <- stormy[,.(EVTYPE.i = sum(INJURIES)), by= EVTYPE]
eventTypeIN <- filter(eventTypeI, EVTYPE.i > 0)
eventTypeIN
sortedEventTypeFN <- eventTypeFN[order(-EVTYPE.f),]
head sortedEventTypeFN
head(sortedEventTypeFN)
sortedEventTypeIN <- eventTypeIN[order(-EVTYPE.i),]
head(sortedEventTypeIN)
eventTypePDMG <- stormy[,.(EVTYPE.pdmg = sum(PROPDMG)), by= EVTYPE]
eventTypePDMGN <- filter(eventTypePDMG, EVTYPE.pdmg > 0)
sortedEventTypePDMGN <- eventTypePDMGN[order(-EVTYPE.pdmg),]
head(sortedEventTypePDMGN)
eventTypeCDMG <- stormy[,.(EVTYPE.cdmg = sum(CROPDMG)), by= EVTYPE]
eventTypeCDMGN <- filter(eventTypeCDMG, EVTYPE.cdmg > 0)
sortedEventTypeCDMGN <- eventTypeCDMGN[order(-EVTYPE.cdmg),]
head(sortedEventTypeCDMGN)
savehistory("~/Coursera/ReproducibleResearch/ScratchPad2.txt")
getwd()
savehistory("~/Coursera/ReproducibleResearch/RepData_PeerAssessment2/SevereWeatherAssessment/src/ScratchPad.txt")
